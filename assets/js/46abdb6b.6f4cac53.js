(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{108:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return z}));var o=t(0),r=t.n(o);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),p=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},b=function(e){var n=p(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(t),u=o,z=b["".concat(a,".").concat(u)]||b[u]||d[u]||i;return t?r.a.createElement(z,c(c({ref:n},s),{},{components:t})):r.a.createElement(z,c({ref:n},s))}));function z(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},158:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/spray_nozzle_coordinates-782cb438c0b7df43f62d5b9b33a4bea5.png"},159:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/spray_nozzle_viewcone-eba2f6bc75104e714c6243d1165069f2.svg"},84:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return p}));var o=t(3),r=t(7),i=(t(0),t(108)),a={id:"spray-nozzles",title:"Nozzle setup",description:"How to set up nozzle geometry."},c={unversionedId:"spray-nozzles",id:"spray-nozzles",isDocsHomePage:!1,title:"Nozzle setup",description:"How to set up nozzle geometry.",source:"@site/docs/spray-nozzles.md",slug:"/spray-nozzles",permalink:"/fresco.knowledgebase/docs/spray-nozzles",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/spray-nozzles.md",version:"current",sidebar:"docs",previous:{title:"Spray modeling",permalink:"/fresco.knowledgebase/docs/spray"}},l=[{value:"Nozzle representation",id:"nozzle-representation",children:[{value:"Nozzle hole location",id:"nozzle-hole-location",children:[]},{value:"Injection axis direction",id:"injection-axis-direction",children:[]},{value:"Discharge Coefficient",id:"discharge-coefficient",children:[]}]}],s={toc:l};function p(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},s,a,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"nozzle-representation"},"Nozzle representation"),Object(i.b)("p",null,Object(i.b)("img",{alt:"Docusaurus",src:t(158).default})),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"type(nozzle)")," representation is an input structure that contains information about each injector nozzle location and properties.\nIn the Matlab toolbox, it can be initialized with"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-{octave}"},"nozzle = fresco_nozzle_init();\n")),Object(i.b)("p",null,"and will return a structure containing:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"               drnoz: 0\n               dznoz: 0\n              dthnoz: 0\n              tiltxy: 0\n              tiltxz: 0\n                cone: 0\n               dcone: 0\n                anoz: 0\n                 smr: 0\n                amp0: 0\n    diameterinjector: 0\n")),Object(i.b)("h3",{id:"nozzle-hole-location"},"Nozzle hole location"),Object(i.b)("p",null,"Nozzle hole location is defined by three keywords: ",Object(i.b)("inlineCode",{parentName:"p"},"drnoz"),", ",Object(i.b)("inlineCode",{parentName:"p"},"dznoz"),", ",Object(i.b)("inlineCode",{parentName:"p"},"dthnoz"),". As shown, these quantities describe the ",Object(i.b)("em",{parentName:"p"},"location of the nozzle hole")," in cylindrical coordinates.\nInternally, the nozzle hole is stored as a ",Object(i.b)("inlineCode",{parentName:"p"},"type(vector) :: xinj")," variable. "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"drnoz = sqrt(xinj^2+yinj^2)"),": radius of the nozzle hole ","[cm]"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dznoz = zinj"),": z coordinate of the nozzle hole ","[cm]"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dthnoz = atan2d(yinj,xinj)"),"; angle in the azimuthal plane ","[degrees]",". Note this quantity is specified in degrees.")),Object(i.b)("p",null,"The relationship between nozzle hole location (in Cartesian coordinates) and these inputs is: "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"xinj = vector(drnoz*cosd(dthnoz),drnoz*sind(dthnoz),dznoz)\n")),Object(i.b)("p",null,"The Matlab toolbox provides a few routines to make these operations a bit simpler. For example, to check ",Object(i.b)("inlineCode",{parentName:"p"},"xinj")," one may run: "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"xinj = fresco_nozzle_xyz(nozzle);\n")),Object(i.b)("p",null,"When the nozzle structure is already part of a FRESCO input structure, one can view the nozzle location, its cone angle and orientation axis, using: "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"[figure_handle] = fresco_plot_nozzle_locations(fresco_input);\n")),Object(i.b)("p",null,"For example, for a diesel sector simulation, the nozzle view may look like: "),Object(i.b)("p",null,Object(i.b)("img",{alt:"Docusaurus",src:t(159).default})),Object(i.b)("h3",{id:"injection-axis-direction"},"Injection axis direction"),Object(i.b)("p",null,"The injection axis direction is not necessarily aligned with the ray that connects the injector center apex ",Object(i.b)("inlineCode",{parentName:"p"},"xA")," and the nozzle hole ",Object(i.b)("inlineCode",{parentName:"p"},"xinj"),".\nIt is defined using two angles from a local spherical coordinate system centered at the nozzle hole: "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"tiltxy = "))),Object(i.b)("p",null,"These variables are also used to define three principal directions of the injection axis: ",Object(i.b)("em",{parentName:"p"},"axial"),", ",Object(i.b)("em",{parentName:"p"},"normal"),", ",Object(i.b)("em",{parentName:"p"},"other"),". Both ",Object(i.b)("em",{parentName:"p"},"normal")," and ",Object(i.b)("em",{parentName:"p"},"other")," are normal to the axial direction.\nThey're defined as: "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"ea = vector(sind(tiltxz)*cosd(tiltxy),sind(tiltxz)*sind(tiltxy),-cosd(tiltxz))\nen = vector(sind(tiltxz+90.0)*cosd(tiltxy),sind(tiltxz+90.0)*sind(tiltxy),-cosd(tiltxz+90.0))\neo = cross(ea,en)\n")),Object(i.b)("p",null,"They can be viewed in Matlab by running "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"[ea,en,eo] = fresco_nozzle_axes(nozzle);\n")),Object(i.b)("h3",{id:"discharge-coefficient"},"Discharge Coefficient"))}p.isMDXComponent=!0}}]);