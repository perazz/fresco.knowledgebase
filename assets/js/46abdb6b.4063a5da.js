(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return z}));var i=n(0),o=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,r=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(n),u=i,z=b["".concat(r,".").concat(u)]||b[u]||d[u]||a;return n?o.a.createElement(z,l(l({ref:t},s),{},{components:n})):o.a.createElement(z,l({ref:t},s))}));function z(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var s=2;s<a;s++)r[s]=n[s];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},158:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/spray_nozzle_coordinates-2f451fa2658d1be6bfad3e8614bb9eec.svg"},159:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/spray_nozzle_viewcone-eba2f6bc75104e714c6243d1165069f2.svg"},160:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/nozzle_cone_geometry-7ece4372e571520aadd5e244b1c04d7b.svg"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var i=n(3),o=n(7),a=(n(0),n(108)),r={id:"spray-nozzles",title:"Nozzle setup",description:"How to set up nozzle geometry."},l={unversionedId:"spray-nozzles",id:"spray-nozzles",isDocsHomePage:!1,title:"Nozzle setup",description:"How to set up nozzle geometry.",source:"@site/docs/spray-nozzles.md",slug:"/spray-nozzles",permalink:"/fresco.knowledgebase/docs/spray-nozzles",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/spray-nozzles.md",version:"current",sidebar:"docs",previous:{title:"Spray modeling",permalink:"/fresco.knowledgebase/docs/spray"}},c=[{value:"Nozzle representation",id:"nozzle-representation",children:[{value:"Nozzle hole location",id:"nozzle-hole-location",children:[]},{value:"Injection axis direction",id:"injection-axis-direction",children:[]},{value:"Injected drop size and discharge Coefficient",id:"injected-drop-size-and-discharge-coefficient",children:[]}]}],s={toc:c};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"nozzle-representation"},"Nozzle representation"),Object(a.b)("p",null,Object(a.b)("img",{alt:"Docusaurus",src:n(158).default})),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"type(nozzle)")," representation is an input structure that contains information about each injector nozzle location and properties.\nIn the Matlab toolbox, it can be initialized with"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-{octave}"},"nozzle = fresco_nozzle_init();\n")),Object(a.b)("p",null,"and will return a structure containing:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"               drnoz: 0\n               dznoz: 0\n              dthnoz: 0\n              tiltxy: 0\n              tiltxz: 0\n                cone: 0\n               dcone: 0\n                anoz: 0\n                 smr: 0\n                amp0: 0\n    diameterinjector: 0\n")),Object(a.b)("h3",{id:"nozzle-hole-location"},"Nozzle hole location"),Object(a.b)("p",null,"Nozzle hole location is defined by three keywords: ",Object(a.b)("inlineCode",{parentName:"p"},"drnoz"),", ",Object(a.b)("inlineCode",{parentName:"p"},"dznoz"),", ",Object(a.b)("inlineCode",{parentName:"p"},"dthnoz"),". As shown, these quantities describe the ",Object(a.b)("em",{parentName:"p"},"location of the nozzle hole")," in cylindrical coordinates.\nInternally, the nozzle hole is stored as a ",Object(a.b)("inlineCode",{parentName:"p"},"type(vector) :: xinj")," variable. "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"drnoz = sqrt(xinj^2+yinj^2)"),": radius of the nozzle hole ","[cm]"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"dznoz = zinj"),": z coordinate of the nozzle hole ","[cm]"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"dthnoz = atan2d(yinj,xinj)"),"; angle in the azimuthal plane ","[degrees]",". Note this quantity is specified in degrees.")),Object(a.b)("p",null,"The relationship between nozzle hole location (in Cartesian coordinates) and these inputs is: "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"xinj = vector(drnoz*cosd(dthnoz),drnoz*sind(dthnoz),dznoz)\n")),Object(a.b)("p",null,"The Matlab toolbox provides a few routines to make these operations a bit simpler. For example, to check ",Object(a.b)("inlineCode",{parentName:"p"},"xinj")," one may run: "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"xinj = fresco_nozzle_xyz(nozzle);\n")),Object(a.b)("p",null,"When the nozzle structure is already part of a FRESCO input structure, one can view the nozzle location, its cone angle and orientation axis, using: "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"[figure_handle] = fresco_plot_nozzle_locations(fresco_input);\n")),Object(a.b)("p",null,"For example, for a diesel sector simulation, the nozzle view may look like: "),Object(a.b)("p",null,Object(a.b)("img",{alt:"Docusaurus",src:n(159).default})),Object(a.b)("h3",{id:"injection-axis-direction"},"Injection axis direction"),Object(a.b)("p",null,"The injection axis direction is not necessarily aligned with the ray that connects the injector center apex ",Object(a.b)("inlineCode",{parentName:"p"},"xA")," and the nozzle hole ",Object(a.b)("inlineCode",{parentName:"p"},"xinj"),".\nIt is defined using two angles from a local spherical coordinate system centered at the nozzle hole: "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"tiltxz = ")," the injector's included angle ","[degrees]",". If ",Object(a.b)("inlineCode",{parentName:"li"},"tiltxz=0"),", then, the injection axis is vertically aligned downward along the ",Object(a.b)("em",{parentName:"li"},"z")," axis; if ",Object(a.b)("inlineCode",{parentName:"li"},"tiltxz=90"),", then, the injection axis is horizontal, normal to the ",Object(a.b)("em",{parentName:"li"},"z")," axis."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"tiltxy = ")," the injection axis orientation on the azimuthal plane. A few examples: ",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"tiltxy=0"),": injection directed along positive ",Object(a.b)("inlineCode",{parentName:"li"},"x"),";"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"tiltxy=90"),": injection directed along positive ",Object(a.b)("inlineCode",{parentName:"li"},"y"),".")),"For a 2d-sector case, this parameter is not read in, as axisymmetry is enforced.")),Object(a.b)("p",null,"The injection axis variables are also used to define three principal directions of the injection axis: ",Object(a.b)("em",{parentName:"p"},"axial"),", ",Object(a.b)("em",{parentName:"p"},"normal"),", ",Object(a.b)("em",{parentName:"p"},"other"),". Both ",Object(a.b)("em",{parentName:"p"},"normal")," and ",Object(a.b)("em",{parentName:"p"},"other")," are normal to the axial direction.\nThey're defined as: "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"ea = vector(sind(tiltxz)*cosd(tiltxy),sind(tiltxz)*sind(tiltxy),-cosd(tiltxz))\nen = vector(sind(tiltxz+90.0)*cosd(tiltxy),sind(tiltxz+90.0)*sind(tiltxy),-cosd(tiltxz+90.0))\neo = cross(ea,en)\n")),Object(a.b)("p",null,"They can be viewed in Matlab by running "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"[ea,en,eo] = fresco_nozzle_axes(nozzle);\n")),Object(a.b)("h3",{id:"injected-drop-size-and-discharge-coefficient"},"Injected drop size and discharge Coefficient"),Object(a.b)("p",null,"It is important to specify a correct size at each nozzle hole, because that determines the injection velocity. Each FRESCO injection pulse specifies an instantaneous mass flow rate, and the instantaneous injection velocity is computed based on the nozzle hole specifications.\nTo "),Object(a.b)("p",null,Object(a.b)("img",{alt:"Docusaurus",src:n(160).default})))}p.isMDXComponent=!0}}]);