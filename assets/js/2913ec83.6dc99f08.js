(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{109:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),p=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,u=d["".concat(o,".").concat(m)]||d[m]||b[m]||r;return n?i.a.createElement(u,l(l({ref:t},s),{},{components:n})):i.a.createElement(u,l({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),i=n(7),r=(n(0),n(109)),o={id:"flame-dpik",title:"Discrete Particle Ignition Kernel (DPIK)",description:"DPIK kernel model settings."},l={unversionedId:"flame-dpik",id:"flame-dpik",isDocsHomePage:!1,title:"Discrete Particle Ignition Kernel (DPIK)",description:"DPIK kernel model settings.",source:"@site/docs/flame-dpik.md",slug:"/flame-dpik",permalink:"/fresco.knowledgebase/docs/flame-dpik",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/flame-dpik.md",version:"current",sidebar:"docs",previous:{title:"Model input",permalink:"/fresco.knowledgebase/docs/flame"}},c=[{value:"Model input",id:"model-input",children:[]},{value:"Spark Plug geometry",id:"spark-plug-geometry",children:[]},{value:"Kernel-&gt;Flame transition",id:"kernel-flame-transition",children:[]},{value:"Ignition model",id:"ignition-model",children:[]},{value:"Spark strikes",id:"spark-strikes",children:[]},{value:"References",id:"references",children:[]}],s={toc:c};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"model-input"},"Model input"),Object(r.b)("p",null,"The Discrete Particle Ignition Kernel (DPIK) model is implemented based on the original model by ",Object(r.b)("a",{parentName:"p",href:"#1"},"Fan and Reitz")," and Tan and Reitz.\nIn the Matlab structure, kernel model inputs are found under the ",Object(r.b)("inlineCode",{parentName:"p"},"flame.sparkPlug")," structure: "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-{octave}"},"\n      electrodes: []               % 1 or 2 electrode locations\n     nChannelPts: 1                % number of spark channel points \n       kernel_r0: 0.1000           % initial radius of each kernel parcel\n         eta_eff: 0.3000           % thermal discharge efficiency [0 to 1]\n          Qspark: 20               % Electrical spark plug power [W]\n         strikes: []               % Spark strike events \n    toFlame_mode: 'TURBLENGTH'     % Kernel->Flame transition method\n     toFlame_val: 25               % Kernel->Flame transition threshold\n          cema_U: 'BLANCO'         % [CEMA only] Spontaneous Flame Speed method (\"BLANCO\",\"SANKARAN\")\n\n")),Object(r.b)("p",null,"The same settings are found in the flame model's ASCII input (",Object(r.b)("inlineCode",{parentName:"p"},"itapeFlame"),") as optional inputs: "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:'language-title="itapeFlame"'},'\ncema_u BLANCO                                 ! CEMA velocity mode: "Sankaran" use IDT; "Blanco" use ERC Autoignition Index \nchannelPts 1                                  ! number of spark-channel particles\nelectrode -0.300000 0.000000 -0.700000        ! electrode 1 of 1: location\nr0    1.00000E-001                            ! kernel: initial radius [cm]\neta_eff    3.00000E-001                       ! kernel: thermal discharge coefficient [-]\ntoFlame TURBLENGTH     25.00                  ! kernel->flame switch. "TURBLENGTH" (follow CM1), "NCELLS" (follow #) \nQspark    2.00000E+001                        ! spark plug electrical power [W] \nstrike at -14.000000 for 8.000000             ! spark strike 1 of 1  \n\n')),Object(r.b)("h2",{id:"spark-plug-geometry"},"Spark Plug geometry"),Object(r.b)("p",null,"Spark plug geometry is represented as either one or two 3D locations, which represent the electrode endpoints: "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"If only one electrode is specified, the spark channel collapses onto a single point, and there can only be one single spherical kernel point. This scenario is common when no advanced spark plug information is available; such point should be ideally located halfway between the physical electrode locations. "),Object(r.b)("li",{parentName:"ul"},"If two electrodes are specified, the two 3D locations represent the anode and cathode endpoints. A line-of-sight spark channel will be generated between the two points, with one or more kernel points, equally spaced along it, as specified by the ",Object(r.b)("inlineCode",{parentName:"li"},"nChannelPts")," keyword.",Object(r.b)("br",{parentName:"li"}),"In any cases, the code will check on startup that all specified spark plug locations lay inside the computational domain.")),Object(r.b)("p",null,"Electrode locations are just specified by the ",Object(r.b)("inlineCode",{parentName:"p"},"electrode")," keyword, followed by its x,y,z coordinates separated by spaces; there's no need to specify how many of them should be used. For example, a 2-electrode sparkplug, vertically aligned on the cylinder axis, is: "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"electrode 0.0 0.0 12.0\nelectrode 0.0 0.0 11.4\n")),Object(r.b)("p",null,"A single-point electrode will just be like: "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"electrode 1.1 -4.3 0.5\n")),Object(r.b)("p",null,"Keyword ",Object(r.b)("inlineCode",{parentName:"p"},"channelPts")," describes the number of ignition kernel locations to be placed along the spark plug line. Each parcel represents an ignition location, and experiences locally-accurate thermodynamic and turbulence flow conditions, as long as the underlying mesh resolution allows it.\nThis number is meaningless if only one electrode is specified, as all particles will collapse onto a single location."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"Channel particles are not allowed to move in the DPIK model: they only change size based on the instantaneous energy release from the spark plug and burn rate."))),Object(r.b)("p",null,"In the Matlab implementation, electrode locations are stored as either a ",Object(r.b)("inlineCode",{parentName:"p"},"[3x1]")," array or a ",Object(r.b)("inlineCode",{parentName:"p"},"[3x2]")," sized matrix."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"There are significant differences as far as what the actual kernel geometry is implemented like. In the original DPIK model, moving Lagrangian parcels and Monte-Carlo methods are used to describe the kernel geometry and kernel volume properties; In FRESCO's implementation, each kernel is represented by a spherical geometry and numerically exact sphere-mesh overlap is employed to interpolate the finite-volume fields."))),Object(r.b)("p",null,"The initial kernel radius (",Object(r.b)("inlineCode",{parentName:"p"},"[cm]"),") i.e. the spark channel's half-witdth is specified by keyword ",Object(r.b)("inlineCode",{parentName:"p"},"r0"),"."),Object(r.b)("h2",{id:"kernel-flame-transition"},"Kernel->Flame transition"),Object(r.b)("h2",{id:"ignition-model"},"Ignition model"),Object(r.b)("p",null,"The ignition model represents when and how much energy release from the spark plug to the gas phase takes place. Energy exchange, which leads to kernel growth, is modeled using ",Object(r.b)("em",{parentName:"p"},"spark")," events.\nThe amount of thermal energy transferred to the gas phase is controlled by: "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-{octave}"},"   flame.sparkPlug.Qspark = 20;   % [W]\n   flame.sparkPlug.eta_eff = 0.3; % [-]\n")),Object(r.b)("p",null,"The thermal source term is computed as: "),Object(r.b)("p",null,"$$\n\\dot{Q}=\\eta",Object(r.b)("em",{parentName:"p"},"{eff}\\dot{Q}"),"{spk}",Object(r.b)("br",{parentName:"p"}),"\n","$$"),Object(r.b)("p",null,"so the user has control over both the spark plug electrical absorption and the thermal discharge efficiency. This formulation and the ",Object(r.b)("inlineCode",{parentName:"p"},"30%")," discharge average efficiency are attributed to Heywood."),Object(r.b)("p",null,"The time-dependent behavior of energy discharge is currently only available as a flat power profile:\n$$\nQ = \\int",Object(r.b)("em",{parentName:"p"},"{t"),"{1,ign}}^{t_{2,ign}}{\\dot{Q} dt}\n$$\nand lasts unchanged for the whole spark strike duration. "),Object(r.b)("h2",{id:"spark-strikes"},"Spark strikes"),Object(r.b)("p",null,"The user can specify any number of strike events. Each strike is characterized by a start time and a duration, as in the ",Object(r.b)("inlineCode",{parentName:"p"},"itapeFlame")," example: "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"strike at -14.000000 for 8.000000             ! spark strike 1 of 1  \n")),Object(r.b)("p",null,"Strike time units should be the same as the simulation time, i.e., crank angle degrees for an engine simulation (",Object(r.b)("inlineCode",{parentName:"p"},"input.engine.rpm>0"),"); or seconds otherwise."),Object(r.b)("p",null,"In the Matlab structure, each strike is represented by the structure "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-{octave}"},"    strike.ca1ign: -1   % Start of ignition event\n    strike.cadign: -1   % Duration of ignition event\n")),Object(r.b)("p",null,"Strikes with negative duration will be ignored."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"The FRESCO solver will adjust its time-stepping strategy in proximity of the beginning and end of each strike event, to match their timing exactly."))),Object(r.b)("h2",{id:"references"},"References"),Object(r.b)("a",{id:"1",href:"https://www.sae.org/publications/technical-papers/content/2000-01-2809/"},"[1]"),"L. Fan, R.D.Reitz. Development of an Ignition and Combustion Model for Spark-Ignition Engines SAE Technical Paper 2000-01-2809, 2001. doi:10.4271/2000-01-2809 .",Object(r.b)("a",{id:"2",href:"https://www.sciencedirect.com/science/article/abs/pii/S0010218006000058"},"[2]"),"Z. Tan, R.D.Reitz. An ignition and combustion model based on the level-set method for spark ignition engine multidimensional modeling Combustion and Flame 145(1-2), 1:15, 2006. doi:10.1016/j.combustflame.2005.12.007 .")}p.isMDXComponent=!0}}]);